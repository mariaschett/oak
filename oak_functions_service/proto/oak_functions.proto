//
// Copyright 2022 The Project Oak Authors
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//     http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.
//

syntax = "proto3";

package oak.functions;

service OakFunctions {
  // Initializes the service and remote attestation keys.
  // method_id: 0
  rpc Initialize(InitializeRequest) returns (InitializeResponse);

  // Handles an invocation coming from a client.
  // method_id: 1
  rpc Invoke(InvokeRequest) returns (InvokeResponse);

  // Builds or replaces the existing lookup data with the new value.
  // method_id: 2
  rpc UpdateLookupData(UpdateLookupDataRequest) returns (UpdateLookupDataResponse);
}

message InitializeRequest {
  bytes wasm_module = 1;
  uint32 constant_response_size = 2;
}

message InitializeResponse {
  PublicKeyInfo public_key_info = 1;
}

message PublicKeyInfo {
  bytes public_key = 1;
  bytes attestation = 2;
}

message InvokeRequest {
  bytes body = 1;
}

message InvokeResponse {
  bytes body = 1;
}

message LookupDataEntry {
  bytes key = 1;
  bytes value = 2;
}

message LookupDataChunk {
  repeated LookupDataEntry items = 1;
}

// Indicates to the LookupDataManager which action should be taken.
enum UpdateAction {
  // The sender extends the lookup data builder with this chunk and will send a
  // further chunk.
  EXTEND = 0;
  // The final chunk the sender sends to build the lookup data.
  FINISH = 1;
  // The sender needs to abort the building the lookup data.
  ABORT = 2;
}

// A message to the LookupDataManager to process the lookup data chunk based on the current
// action.
//
// If the definition of UpdateLookupDataRequest changes, the estimation of the size when
// serialized in the Oak Functions Launcher needs to change, too.
message UpdateLookupDataRequest {
  UpdateAction action = 1;
  LookupDataChunk chunk = 2;
}

enum UpdateStatus {
  EXTENDED = 0;
  FINISHED = 1;
  ABORTED = 2;
}

message UpdateLookupDataResponse {
  UpdateStatus update_status = 1;
}

message Empty {}
